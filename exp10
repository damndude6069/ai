Tower Of Hanoi:
hanoi(N) :-
    move(N, left, center, right).

% Define a predicate that prints the moves
move(0, _, _, _) :- !.
move(N, A, B, C) :-
    M is N - 1,
    move(M, A, C, B),
    format('Move disk ~w from ~w to ~w~n', [N, A, C]),
    move(M, B, A, C).


Family:
man(anand).
man(arun).
woman(rema).
woman(pooja).
parent(anand,parth).
parent(arun,rema).
parent(pooja,rema).
parent(rema,parth).
father(F,A) :- man(F),parent(F,A)
mother(M,A) :- woman(M),parent(M,A)


Fibonacci:
fibonacci(1,1).
fibonacci(2,1).
fibonacci
(N,X):- N>=3,N1 is N 1,N2 is N 2,
fibonacci(N1,X1), fibonacci (N2,X2),X is X1+X2

Factorial:
factorial(0,1).
factorial(N,X) :- factorial(N1,X1), N is N1+1, X is X1*N.
 